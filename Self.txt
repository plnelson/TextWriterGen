%$; Copyright (c) 2016 Patrick Nelson. All rights reserved.
%$; Licensed under the MIT license. See LICENSE file in the project root for full license information.
%$;
%$; Input file to generate TextWriterGen output code
%$;
%$-Prolog(inputFileName, namespaceName, className)
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.IO;

//
// This code was generated by TextWriterGen from $inputFileName$
//

namespace $namespaceName$
{
    internal class $className$
    {
        private readonly TextWriter _writer;

        public $className$(TextWriter writer)
        {
            _writer = writer;
        }
%$-FunctionStart(name, parameters)

        public void $name$($parameters$)
        {
%$-EmptyLine
            _writer.WriteLine();
%$-LiteralLine(text)
            _writer.WriteLine(@"$text$");
%$-SubstitutedLine(concatParams)
            _writer.WriteLine(string.Concat($concatParams$));
%$-FunctionEnd
        }
%$-Epilog
    }
}